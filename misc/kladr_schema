--
-- PostgreSQL database dump
--

-- Dumped from database version 9.3.4
-- Dumped by pg_dump version 9.3.4
-- Started on 2015-09-22 20:03:05

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- TOC entry 7 (class 2615 OID 16842)
-- Name: kladr; Type: SCHEMA; Schema: -; Owner: usi
--

CREATE SCHEMA kladr;


ALTER SCHEMA kladr OWNER TO usi;

SET search_path = kladr, pg_catalog;

--
-- TOC entry 354 (class 1255 OID 16849)
-- Name: add_kladr(character varying, character varying, character varying, character varying, character); Type: FUNCTION; Schema: kladr; Owner: usi
--

CREATE FUNCTION add_kladr(_param1 character varying, _param2 character varying, _param3 character varying, _param4 character varying, _param5 character) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
	  DECLARE
	  pcode   int;
	  sbscode int;
	  nbscode int;
	  subj    smallint;
	  reg     smallint;
	  city    smallint;
	  place   smallint;
	  act     smallint;
	  BEGIN
	    SELECT INTO sbscode sbs_pcode FROM socrbase WHERE (sbs_shortname LIKE $2);
	    IF sbscode IS NULL THEN
	      RAISE EXCEPTION 'Query for sbs_pcode returns NULL!';
	      RETURN 1; 
	    ELSE
	      SELECT INTO nbscode get_nbscode($1);
	      IF (nbscode = 0) THEN
	        RAISE EXCEPTION 'Query for nbscode returns 0!';
	        RETURN 1;
	      END IF;
	      SELECT INTO subj  CAST(substring($3 FROM 1 FOR 2) AS smallint);
	      SELECT INTO reg   CAST(substring($3 FROM 3 FOR 3) AS smallint);
	      SELECT INTO city  CAST(substring($3 FROM 6 FOR 3) AS smallint);
	      SELECT INTO place CAST(substring($3 FROM 9 FOR 3) AS smallint);
	      SELECT INTO act   CAST(substring($3 FROM 12 FOR 2) AS smallint);
	      SELECT INTO pcode kld_pcode FROM kladr WHERE (kld_subjcode = subj) 
	        AND (kld_regcode = reg) AND (kld_status = CAST($5 AS smallint))
	        AND (kld_citycode = city) AND (kld_placecode = place)
	        AND (kld_actcode = act) AND (kld_sbscode = sbscode) AND (kld_nbscode =nbscode);
	      IF pcode IS NULL THEN
	        INSERT INTO kladr(kld_nbscode, kld_sbscode, kld_subjcode, kld_regcode, kld_citycode, kld_placecode,
	          kld_zipcode, kld_actcode, kld_status) VALUES(nbscode, sbscode, subj, reg, city, place, $4, act,
		  CAST($5 AS smallint));
	      END IF;
	    END IF;
	    RETURN 0;
	  END;
	$_$;


ALTER FUNCTION kladr.add_kladr(_param1 character varying, _param2 character varying, _param3 character varying, _param4 character varying, _param5 character) OWNER TO usi;

--
-- TOC entry 355 (class 1255 OID 16850)
-- Name: add_socrbase(character varying, character varying); Type: FUNCTION; Schema: kladr; Owner: usi
--

CREATE FUNCTION add_socrbase(_param1 character varying, _param2 character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
	  DECLARE
	  pcode int;
	  BEGIN
	    SELECT INTO pcode sbs_pcode FROM socrbase WHERE (sbs_shortname LIKE $1);
	    IF pcode IS NULL THEN
	      INSERT INTO socrbase(sbs_shortname, sbs_name) VALUES($1, $2);
	    END IF;
	    RETURN 0;
	  END;
	$_$;


ALTER FUNCTION kladr.add_socrbase(_param1 character varying, _param2 character varying) OWNER TO usi;

--
-- TOC entry 356 (class 1255 OID 16851)
-- Name: add_street(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: kladr; Owner: usi
--

CREATE FUNCTION add_street(_param1 character varying, _param2 character varying, _param3 character varying, _param4 character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
	  DECLARE
	  pcode   int;
	  sbscode int;
	  kldcode int;
	  nbscode int;
	  subj    smallint;
	  reg     smallint;
	  city    smallint;
	  place   smallint;
	  str     smallint;
	  act     smallint;
	  BEGIN
	    SELECT INTO sbscode sbs_pcode FROM socrbase WHERE (sbs_shortname LIKE $2);
	    IF sbscode IS NULL THEN
	      RAISE EXCEPTION 'Query for sbs_pcode returns NULL!';
	      RETURN 1; 
	    ELSE
	      SELECT INTO nbscode get_nbscode($1);
	      IF (nbscode = 0) THEN
	        RAISE EXCEPTION 'Query for nbscode returns 0!';
	        RETURN 1;
	      END IF;
	      SELECT INTO subj  CAST(substring($3 FROM 1 FOR 2) AS smallint);
	      SELECT INTO reg   CAST(substring($3 FROM 3 FOR 3) AS smallint);
	      SELECT INTO city  CAST(substring($3 FROM 6 FOR 3) AS smallint);
	      SELECT INTO place CAST(substring($3 FROM 9 FOR 3) AS smallint);
	      SELECT INTO str   CAST(substring($3 FROM 12 FOR 4) AS smallint);
	      SELECT INTO act   CAST(substring($3 FROM 16 FOR 2) AS smallint);
	      SELECT INTO kldcode kld_pcode FROM kladr WHERE (kld_subjcode = subj) AND (kld_regcode = reg)
	        AND (kld_citycode = city) AND (kld_placecode = place);
	      IF kldcode IS NULL THEN
	        RAISE EXCEPTION 'Query for kld_pcode returns NULL!';
		RETURN 1;
	      ELSE
	        SELECT INTO pcode str_pcode FROM street WHERE (str_kldcode = kldcode) AND (str_actcode = act)
	        AND (str_strcode = str) AND (str_sbscode = sbscode) AND (str_nbscode = nbscode);
		IF pcode IS NULL THEN
		  INSERT INTO street(str_nbscode, str_zipcode, str_sbscode, str_kldcode, str_strcode, str_actcode)
		    VALUES(nbscode, $4, sbscode, kldcode, str, act);
		END IF;
	      END IF;
	    END IF;
	    RETURN 0;
	  END;
	$_$;


ALTER FUNCTION kladr.add_street(_param1 character varying, _param2 character varying, _param3 character varying, _param4 character varying) OWNER TO usi;

--
-- TOC entry 357 (class 1255 OID 16852)
-- Name: get_address(integer); Type: FUNCTION; Schema: kladr; Owner: usi
--

CREATE FUNCTION get_address(_param1 integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
	  DECLARE
	  placecode  smallint;
	  citycode   smallint;
	  regcode    smallint;
	  subjcode   smallint;
	  actcode    smallint;
	  status     smallint;
	  placename  varchar(40);
	  regname    varchar(40);
	  subjname   varchar(40);
	  BEGIN
	  SELECT INTO actcode kld_actcode FROM kladr WHERE (kld_pcode = $1);
	  IF (actcode = 0) THEN
	    SELECT INTO status kld_status FROM kladr WHERE (kld_pcode = $1);
	    SELECT INTO regcode kld_regcode FROM kladr WHERE (kld_pcode = $1);
	    SELECT INTO subjcode kld_subjcode FROM kladr WHERE (kld_pcode = $1);
	    SELECT INTO citycode kld_citycode FROM kladr WHERE (kld_pcode = $1);
	    SELECT INTO placecode kld_placecode FROM kladr WHERE (kld_pcode = $1);
	    SELECT INTO placename (get_namebase(kld_nbscode) || ' ' || sbs_shortname)
	      FROM kladr, socrbase WHERE (sbs_pcode = kld_sbscode) AND (kld_pcode = $1);
	    SELECT INTO regname (get_namebase(kld_nbscode) || ' ' || sbs_shortname)
	      FROM kladr, socrbase WHERE (sbs_pcode = kld_sbscode)
	      AND (kld_subjcode = subjcode) AND (kld_regcode = regcode) AND (kld_citycode = 0)
	      AND (kld_placecode = 0) AND (kld_actcode = 0);
	    SELECT INTO subjname (get_namebase(kld_nbscode) || ' ' || sbs_shortname)
	      FROM kladr, socrbase WHERE (sbs_pcode = kld_sbscode)
	      AND (kld_subjcode = subjcode) AND (kld_regcode = 0) AND (kld_citycode = 0)
	      AND (kld_placecode = 0) AND (kld_actcode = 0);
	    IF (subjname IS NULL) THEN
	      subjname = '';
	    END IF;
	    IF (regname IS NULL) THEN
	      regname = '';
	    END IF;
	    IF ((status = 0) AND (regcode > 0)) THEN
	      RETURN subjname || ', ' || regname || ', ' || placename;
	    END IF;
	    IF ((status = 1) OR ((status = 0) AND (regcode = 0))) THEN
	      RETURN subjname || ', ' || placename;
	    END IF;
	    IF ((status = 2) OR (status = 3)) THEN
	      RETURN placename;
	    END IF;
	  ELSE
	    RETURN '';
	  END IF;
	  END;
	$_$;


ALTER FUNCTION kladr.get_address(_param1 integer) OWNER TO usi;

--
-- TOC entry 358 (class 1255 OID 16853)
-- Name: get_namebase(integer); Type: FUNCTION; Schema: kladr; Owner: usi
--

CREATE FUNCTION get_namebase(_param1 integer) RETURNS character varying
    LANGUAGE sql
    AS $_$
	  SELECT nbs_name AS RESULT FROM namebase WHERE (nbs_pcode = $1);
	$_$;


ALTER FUNCTION kladr.get_namebase(_param1 integer) OWNER TO usi;

--
-- TOC entry 359 (class 1255 OID 16854)
-- Name: get_nbscode(character varying); Type: FUNCTION; Schema: kladr; Owner: usi
--

CREATE FUNCTION get_nbscode(_param1 character varying) RETURNS integer
    LANGUAGE plpgsql
    AS $_$
	  DECLARE
	  pcode int;
	  BEGIN
	    SELECT INTO pcode nbs_pcode FROM namebase WHERE (nbs_name LIKE $1);
	    IF pcode IS NULL THEN
	      INSERT INTO namebase(nbs_name) VALUES($1);
	      SELECT INTO pcode nbs_pcode FROM namebase WHERE (nbs_name LIKE $1);
	      IF pcode IS NULL THEN
	        RAISE EXCEPTION 'Problem with name table!';
	        RETURN 0;
	      END IF;
	    END IF;
	    RETURN pcode;
	  END;
	$_$;


ALTER FUNCTION kladr.get_nbscode(_param1 character varying) OWNER TO usi;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 172 (class 1259 OID 16855)
-- Name: kladr; Type: TABLE; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE TABLE kladr (
    kld_pcode bigint NOT NULL,
    kld_sbscode integer NOT NULL,
    kld_nbscode integer NOT NULL,
    kld_regcode smallint DEFAULT 0 NOT NULL,
    kld_subjcode smallint DEFAULT 0 NOT NULL,
    kld_citycode smallint DEFAULT 0 NOT NULL,
    kld_placecode smallint DEFAULT 0 NOT NULL,
    kld_zipcode character varying(9) DEFAULT ''::character varying NOT NULL,
    kld_actcode smallint DEFAULT 0 NOT NULL,
    kld_status smallint DEFAULT 0 NOT NULL
);


ALTER TABLE kladr.kladr OWNER TO usi;

--
-- TOC entry 173 (class 1259 OID 16865)
-- Name: kladr_kld_pcode_seq; Type: SEQUENCE; Schema: kladr; Owner: usi
--

CREATE SEQUENCE kladr_kld_pcode_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE kladr.kladr_kld_pcode_seq OWNER TO usi;

--
-- TOC entry 2469 (class 0 OID 0)
-- Dependencies: 173
-- Name: kladr_kld_pcode_seq; Type: SEQUENCE OWNED BY; Schema: kladr; Owner: usi
--

ALTER SEQUENCE kladr_kld_pcode_seq OWNED BY kladr.kld_pcode;


--
-- TOC entry 174 (class 1259 OID 16867)
-- Name: namebase; Type: TABLE; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE TABLE namebase (
    nbs_pcode bigint NOT NULL,
    nbs_name character varying(50) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE kladr.namebase OWNER TO usi;

--
-- TOC entry 175 (class 1259 OID 16871)
-- Name: namebase_nbs_pcode_seq; Type: SEQUENCE; Schema: kladr; Owner: usi
--

CREATE SEQUENCE namebase_nbs_pcode_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE kladr.namebase_nbs_pcode_seq OWNER TO usi;

--
-- TOC entry 2470 (class 0 OID 0)
-- Dependencies: 175
-- Name: namebase_nbs_pcode_seq; Type: SEQUENCE OWNED BY; Schema: kladr; Owner: usi
--

ALTER SEQUENCE namebase_nbs_pcode_seq OWNED BY namebase.nbs_pcode;


--
-- TOC entry 176 (class 1259 OID 16873)
-- Name: socrbase; Type: TABLE; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE TABLE socrbase (
    sbs_pcode bigint NOT NULL,
    sbs_shortname character varying(10) DEFAULT ''::character varying NOT NULL,
    sbs_name character varying(50) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE kladr.socrbase OWNER TO usi;

--
-- TOC entry 177 (class 1259 OID 16878)
-- Name: socrbase_sbs_pcode_seq; Type: SEQUENCE; Schema: kladr; Owner: usi
--

CREATE SEQUENCE socrbase_sbs_pcode_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE kladr.socrbase_sbs_pcode_seq OWNER TO usi;

--
-- TOC entry 2471 (class 0 OID 0)
-- Dependencies: 177
-- Name: socrbase_sbs_pcode_seq; Type: SEQUENCE OWNED BY; Schema: kladr; Owner: usi
--

ALTER SEQUENCE socrbase_sbs_pcode_seq OWNED BY socrbase.sbs_pcode;


--
-- TOC entry 178 (class 1259 OID 16880)
-- Name: street; Type: TABLE; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE TABLE street (
    str_pcode bigint NOT NULL,
    str_nbscode integer NOT NULL,
    str_zipcode character varying(9) DEFAULT ''::character varying NOT NULL,
    str_sbscode integer NOT NULL,
    str_kldcode integer NOT NULL,
    str_strcode smallint DEFAULT 0 NOT NULL,
    str_actcode smallint DEFAULT 0 NOT NULL
);


ALTER TABLE kladr.street OWNER TO usi;

--
-- TOC entry 179 (class 1259 OID 16886)
-- Name: street_str_pcode_seq; Type: SEQUENCE; Schema: kladr; Owner: usi
--

CREATE SEQUENCE street_str_pcode_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE kladr.street_str_pcode_seq OWNER TO usi;

--
-- TOC entry 2472 (class 0 OID 0)
-- Dependencies: 179
-- Name: street_str_pcode_seq; Type: SEQUENCE OWNED BY; Schema: kladr; Owner: usi
--

ALTER SEQUENCE street_str_pcode_seq OWNED BY street.str_pcode;


--
-- TOC entry 2295 (class 2604 OID 17025)
-- Name: kld_pcode; Type: DEFAULT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY kladr ALTER COLUMN kld_pcode SET DEFAULT nextval('kladr_kld_pcode_seq'::regclass);


--
-- TOC entry 2297 (class 2604 OID 17026)
-- Name: nbs_pcode; Type: DEFAULT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY namebase ALTER COLUMN nbs_pcode SET DEFAULT nextval('namebase_nbs_pcode_seq'::regclass);


--
-- TOC entry 2300 (class 2604 OID 17027)
-- Name: sbs_pcode; Type: DEFAULT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY socrbase ALTER COLUMN sbs_pcode SET DEFAULT nextval('socrbase_sbs_pcode_seq'::regclass);


--
-- TOC entry 2304 (class 2604 OID 17028)
-- Name: str_pcode; Type: DEFAULT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY street ALTER COLUMN str_pcode SET DEFAULT nextval('street_str_pcode_seq'::regclass);


--
-- TOC entry 2306 (class 2606 OID 17073)
-- Name: kladr_pk; Type: CONSTRAINT; Schema: kladr; Owner: usi; Tablespace: 
--

ALTER TABLE ONLY kladr
    ADD CONSTRAINT kladr_pk PRIMARY KEY (kld_pcode);


--
-- TOC entry 2318 (class 2606 OID 17075)
-- Name: namebase_pk; Type: CONSTRAINT; Schema: kladr; Owner: usi; Tablespace: 
--

ALTER TABLE ONLY namebase
    ADD CONSTRAINT namebase_pk PRIMARY KEY (nbs_pcode);


--
-- TOC entry 2322 (class 2606 OID 17077)
-- Name: socrbase_pk; Type: CONSTRAINT; Schema: kladr; Owner: usi; Tablespace: 
--

ALTER TABLE ONLY socrbase
    ADD CONSTRAINT socrbase_pk PRIMARY KEY (sbs_pcode);


--
-- TOC entry 2326 (class 2606 OID 17079)
-- Name: street_pk; Type: CONSTRAINT; Schema: kladr; Owner: usi; Tablespace: 
--

ALTER TABLE ONLY street
    ADD CONSTRAINT street_pk PRIMARY KEY (str_pcode);


--
-- TOC entry 2315 (class 1259 OID 17114)
-- Name: name_fts_idx ; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX "name_fts_idx " ON namebase USING gin (to_tsvector('english'::regconfig, (nbs_name)::text));


--
-- TOC entry 2316 (class 1259 OID 17129)
-- Name: namebase_nbs_name_key; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE UNIQUE INDEX namebase_nbs_name_key ON namebase USING btree (nbs_name);


--
-- TOC entry 2307 (class 1259 OID 319678)
-- Name: object_parser_index3; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX object_parser_index3 ON kladr USING btree (kld_actcode, kld_subjcode, kld_sbscode);


--
-- TOC entry 2308 (class 1259 OID 319679)
-- Name: object_parser_index4; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX object_parser_index4 ON kladr USING btree (kld_actcode);


--
-- TOC entry 2309 (class 1259 OID 319680)
-- Name: object_parser_index5; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX object_parser_index5 ON kladr USING btree (kld_nbscode);


--
-- TOC entry 2310 (class 1259 OID 319681)
-- Name: object_parser_index6; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX object_parser_index6 ON kladr USING btree (kld_actcode, kld_nbscode);


--
-- TOC entry 2311 (class 1259 OID 319682)
-- Name: object_parser_index7; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX object_parser_index7 ON kladr USING btree (kld_actcode, kld_nbscode, kld_sbscode);


--
-- TOC entry 2312 (class 1259 OID 319707)
-- Name: object_parser_index8; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX object_parser_index8 ON kladr USING btree (kld_actcode, kld_zipcode);


--
-- TOC entry 2313 (class 1259 OID 491521)
-- Name: region_filters_index; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX region_filters_index ON kladr USING btree (kld_actcode, kld_nbscode, kld_sbscode);


--
-- TOC entry 2314 (class 1259 OID 491536)
-- Name: region_filters_index1; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX region_filters_index1 ON kladr USING btree (kld_sbscode, kld_actcode);


--
-- TOC entry 2319 (class 1259 OID 491531)
-- Name: region_filters_index2; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX region_filters_index2 ON namebase USING btree (lower((nbs_name)::text) text_pattern_ops, nbs_pcode);


--
-- TOC entry 2320 (class 1259 OID 491524)
-- Name: region_filters_index3; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE INDEX region_filters_index3 ON socrbase USING btree (sbs_pcode);


--
-- TOC entry 2323 (class 1259 OID 17130)
-- Name: socrbase_sbs_name_key; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE UNIQUE INDEX socrbase_sbs_name_key ON socrbase USING btree (sbs_name);


--
-- TOC entry 2324 (class 1259 OID 17131)
-- Name: socrbase_sbs_shortname_key; Type: INDEX; Schema: kladr; Owner: usi; Tablespace: 
--

CREATE UNIQUE INDEX socrbase_sbs_shortname_key ON socrbase USING btree (sbs_shortname);


--
-- TOC entry 2332 (class 2620 OID 17140)
-- Name: RI_ConstraintTrigger_a_10227039; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227039" AFTER DELETE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2333 (class 2620 OID 17142)
-- Name: RI_ConstraintTrigger_a_10227040; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227040" AFTER UPDATE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd"();


--
-- TOC entry 2334 (class 2620 OID 17144)
-- Name: RI_ConstraintTrigger_a_10227064; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227064" AFTER DELETE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2335 (class 2620 OID 17146)
-- Name: RI_ConstraintTrigger_a_10227065; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227065" AFTER UPDATE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd"();


--
-- TOC entry 2342 (class 2620 OID 17148)
-- Name: RI_ConstraintTrigger_a_10227099; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227099" AFTER DELETE ON namebase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2343 (class 2620 OID 17150)
-- Name: RI_ConstraintTrigger_a_10227100; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227100" AFTER UPDATE ON namebase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd"();


--
-- TOC entry 2346 (class 2620 OID 17152)
-- Name: RI_ConstraintTrigger_a_10227104; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227104" AFTER DELETE ON socrbase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2347 (class 2620 OID 17154)
-- Name: RI_ConstraintTrigger_a_10227105; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227105" AFTER UPDATE ON socrbase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd"();


--
-- TOC entry 2348 (class 2620 OID 17156)
-- Name: RI_ConstraintTrigger_a_10227109; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227109" AFTER DELETE ON socrbase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2349 (class 2620 OID 17158)
-- Name: RI_ConstraintTrigger_a_10227110; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227110" AFTER UPDATE ON socrbase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd"();


--
-- TOC entry 2336 (class 2620 OID 17160)
-- Name: RI_ConstraintTrigger_a_10227114; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227114" AFTER DELETE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2337 (class 2620 OID 17162)
-- Name: RI_ConstraintTrigger_a_10227115; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227115" AFTER UPDATE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd"();


--
-- TOC entry 2344 (class 2620 OID 17164)
-- Name: RI_ConstraintTrigger_a_10227119; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227119" AFTER DELETE ON namebase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del"();


--
-- TOC entry 2345 (class 2620 OID 17166)
-- Name: RI_ConstraintTrigger_a_10227120; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_a_10227120" AFTER UPDATE ON namebase NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd"();


--
-- TOC entry 2338 (class 2620 OID 17168)
-- Name: RI_ConstraintTrigger_c_10227101; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227101" AFTER INSERT ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins"();


--
-- TOC entry 2339 (class 2620 OID 17170)
-- Name: RI_ConstraintTrigger_c_10227102; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227102" AFTER UPDATE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_upd"();


--
-- TOC entry 2340 (class 2620 OID 17172)
-- Name: RI_ConstraintTrigger_c_10227106; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227106" AFTER INSERT ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins"();


--
-- TOC entry 2341 (class 2620 OID 17174)
-- Name: RI_ConstraintTrigger_c_10227107; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227107" AFTER UPDATE ON kladr NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_upd"();


--
-- TOC entry 2350 (class 2620 OID 17176)
-- Name: RI_ConstraintTrigger_c_10227111; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227111" AFTER INSERT ON street NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins"();


--
-- TOC entry 2351 (class 2620 OID 17178)
-- Name: RI_ConstraintTrigger_c_10227112; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227112" AFTER UPDATE ON street NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_upd"();


--
-- TOC entry 2352 (class 2620 OID 17180)
-- Name: RI_ConstraintTrigger_c_10227116; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227116" AFTER INSERT ON street NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins"();


--
-- TOC entry 2353 (class 2620 OID 17182)
-- Name: RI_ConstraintTrigger_c_10227117; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227117" AFTER UPDATE ON street NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_upd"();


--
-- TOC entry 2354 (class 2620 OID 17184)
-- Name: RI_ConstraintTrigger_c_10227121; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227121" AFTER INSERT ON street NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins"();


--
-- TOC entry 2355 (class 2620 OID 17186)
-- Name: RI_ConstraintTrigger_c_10227122; Type: TRIGGER; Schema: kladr; Owner: usi
--

CREATE CONSTRAINT TRIGGER "RI_ConstraintTrigger_c_10227122" AFTER UPDATE ON street NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_upd"();


--
-- TOC entry 2327 (class 2606 OID 17187)
-- Name: kladr_namebase_fk; Type: FK CONSTRAINT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY kladr
    ADD CONSTRAINT kladr_namebase_fk FOREIGN KEY (kld_nbscode) REFERENCES namebase(nbs_pcode) ON UPDATE CASCADE;


--
-- TOC entry 2328 (class 2606 OID 17192)
-- Name: kladr_socrbase_fk; Type: FK CONSTRAINT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY kladr
    ADD CONSTRAINT kladr_socrbase_fk FOREIGN KEY (kld_sbscode) REFERENCES socrbase(sbs_pcode) ON UPDATE CASCADE;


--
-- TOC entry 2329 (class 2606 OID 17197)
-- Name: street_kladr_fk; Type: FK CONSTRAINT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY street
    ADD CONSTRAINT street_kladr_fk FOREIGN KEY (str_kldcode) REFERENCES kladr(kld_pcode) ON UPDATE CASCADE;


--
-- TOC entry 2330 (class 2606 OID 17202)
-- Name: street_namebase_fk; Type: FK CONSTRAINT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY street
    ADD CONSTRAINT street_namebase_fk FOREIGN KEY (str_nbscode) REFERENCES namebase(nbs_pcode) ON UPDATE CASCADE;


--
-- TOC entry 2331 (class 2606 OID 17207)
-- Name: street_socrbase_fk; Type: FK CONSTRAINT; Schema: kladr; Owner: usi
--

ALTER TABLE ONLY street
    ADD CONSTRAINT street_socrbase_fk FOREIGN KEY (str_sbscode) REFERENCES socrbase(sbs_pcode) ON UPDATE CASCADE;


-- Completed on 2015-09-22 20:03:06

--
-- PostgreSQL database dump complete
--

